install.packages("janitor")
?read.csv
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("../raw data/State_to_State_Migration_Table_2022_T13")
dat <- read.csv("../raw data/State_to_State_Migration_Table_2022_T13.csv")
dat <- read.csv("./raw data/State_to_State_Migration_Table_2022_T13.csv")
library(readxl)
dat <- readxl::read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.csv")
dat <- readxl::read_xlsx("../raw data/State_to_State_Migration_Table_2022_T13.csv")
dat <- readxl::read_xlsx("raw data\State_to_State_Migration_Table_2022_T13.xlsx)
dat <- readxl::read_xlsx("../raw data/State_to_State_Migration_Table_2022_T13.xlsx)
dat <- readxl::read_xlsx("../raw data/State_to_State_Migration_Table_2022_T13.xlsx")
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx")
View(dat)
?read_xlsx
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation")
View(dat)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat[2,3]
library(tidyverse)
dat <- dat[, !apply(dat, 2, function(x) any(x == "MOE"))]
dat <- dat[, !apply(dat, 2, function(x) any(x == "MOE"))]
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select(-across(where(~ any(. == "MOE"))))
library(dplyr)
# Assuming your data frame is named 'df'
filtered_dat <- dat %>%
select(-matches("MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
View(filtered_dat)
?across
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
filtered_df
View(filtered_df)
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
library(dplyr)
# Assuming your data frame is named 'df'
filtered_df <- dat %>%
select_if(~ !any(. == "MOE"))
# 'filtered_df' now contains the original data frame with columns having "MOE" as values removed.
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 1)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
skip = 2)
dat <- read_xlsx("./raw data/State_to_State_Migration_Table_2022_T13.xlsx",
sheet = "transformation (2)",
range = "A3:BH56",
skip = 2)
colnames(dat)
